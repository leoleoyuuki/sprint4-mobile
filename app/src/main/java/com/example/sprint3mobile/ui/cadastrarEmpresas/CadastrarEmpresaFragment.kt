package com.example.sprint3mobile.ui.cadastrarEmpresas

import android.os.Bundle
import android.util.Log
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.*
import androidx.fragment.app.Fragment
import com.example.sprint3mobile.R
import com.example.sprint3mobile.RetrofitClient
import com.example.sprint3mobile.data.Company
import com.google.gson.Gson
import okhttp3.ResponseBody
import retrofit2.Call
import retrofit2.Callback
import retrofit2.Response

class CadastrarEmpresaFragment : Fragment() {

    private lateinit var nomeEditText: EditText
    private lateinit var tamanhoSpinner: Spinner
    private lateinit var setorSpinner: Spinner
    private lateinit var localizacaoEditText: EditText
    private lateinit var numeroFuncionariosEditText: EditText
    private lateinit var tipoEmpresaSpinner: Spinner
    private lateinit var clienteCheckBox: CheckBox
    private lateinit var submitButton: Button

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        val view = inflater.inflate(R.layout.fragment_cadastrar_empresa, container, false)

        nomeEditText = view.findViewById(R.id.nomeEditText)
        tamanhoSpinner = view.findViewById(R.id.tamanhoSpinner)
        setorSpinner = view.findViewById(R.id.setorSpinner)
        localizacaoEditText = view.findViewById(R.id.localizacaoEditText)
        numeroFuncionariosEditText = view.findViewById(R.id.numeroFuncionariosEditText)
        tipoEmpresaSpinner = view.findViewById(R.id.tipoEmpresaSpinner)
        clienteCheckBox = view.findViewById(R.id.clienteCheckBox)
        submitButton = view.findViewById(R.id.submitButton)

        submitButton.setOnClickListener {
            cadastrarEmpresa()
        }

        return view
    }

    private fun cadastrarEmpresa() {
        val nome = nomeEditText.text.toString()
        val tamanho = tamanhoSpinner.selectedItem.toString()
        val setor = setorSpinner.selectedItem.toString()
        val localizacao = localizacaoEditText.text.toString()
        val numeroFuncionarios = numeroFuncionariosEditText.text.toString().toIntOrNull() ?: 0
        val tipoEmpresa = tipoEmpresaSpinner.selectedItem.toString()
        val cliente = clienteCheckBox.isChecked

        var newCompany = Company(
            id = 0L, // Placeholder, can be autogenerated in backend
            nome = nome,
            tamanho = tamanho,
            setor = setor,
            localizacaoGeografica = localizacao,
            numeroFuncionarios = numeroFuncionarios,
            tipoEmpresa = tipoEmpresa,
            cliente = cliente
        )
        RetrofitClient.instance.createCompany(newCompany).enqueue(object : Callback<ResponseBody> {
            override fun onResponse(call: Call<ResponseBody>, response: Response<ResponseBody>) {
                if (response.isSuccessful) {
                    val responseBody = response.body()?.string()
                    Log.d("API Response", "Resposta Bruta: $responseBody")
                    Toast.makeText(context, "Empresa cadastrada com sucesso!", Toast.LENGTH_LONG)
                        .show()
                } else {
                    Log.e(
                        "erroinsercao",
                        "Erro ao cadastrar empresa: ${response.errorBody()?.string()}"
                    )
                    Toast.makeText(context, "Erro ao cadastrar empresa", Toast.LENGTH_LONG).show()
                }
            }

            override fun onFailure(call: Call<ResponseBody>, t: Throwable) {
                Toast.makeText(context, "Falha na requisição: ${t.message}", Toast.LENGTH_LONG)
                    .show()
                Log.i("erroinsercao", t.message.toString())
            }
        })
    }
    }
